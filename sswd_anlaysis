# analyze sea star data ---------------------------------------------------------
rm(list = ls()) # remove everything stored in environment

# load data ---------------------------------------------------------------------
sswd.surveys <- read.csv("Sunflower_data_complete_abundance_score_lower_limit-SFH.csv", head=T, stringsAsFactors = F)

# format date, month, and year of surveys----------------------------------------
sswd.surveys$Date <- as.Date(sswd.surveys$date, "%m/%d/%y")
sswd.surveys$Month <- format(sswd.surveys$Date, "%b")
sswd.surveys$Year <- format(sswd.surveys$Date, "%Y")

# replace surface temperatures of 0 with NA and convert low values to F --------
# toCelsius <- function(f){round((5/9) * (f-32), 2)}
# sswd.surveys$STemp2 <- sswd.surveys$STemp
# sswd.surveys$STemp2 <- ifelse(sswd.surveys$STemp2 > 14, toCelsius(sswd.surveys$STemp2), sswd.surveys$STemp2)
# sswd.surveys$STemp2[sswd.surveys$STemp2 <= 4.4] <- NA

# biogeographic region categorization ------------------------------------------
sswd.surveys$bgr <- sswd.surveys$lat2
sswd.surveys$bgr[sswd.surveys$bgr >= 54.5] <- "Aleutian"
sswd.surveys$bgr[sswd.surveys$bgr < 54.5 & sswd.surveys$bgr >= 48.5] <- "Columbian"
sswd.surveys$bgr[sswd.surveys$bgr < 48.5 & sswd.surveys$bgr >= 36.5] <- "Mendocinian"
sswd.surveys$bgr[sswd.surveys$bgr < 36.5 & sswd.surveys$bgr >= 34.2] <- "Montereyan"
sswd.surveys$bgr[sswd.surveys$bgr < 34.2 & sswd.surveys$bgr >= 34.0] <- "S. Californian"
sswd.surveys$bgr[sswd.surveys$bgr < 34.0 & sswd.surveys$bgr >= 29.5] <- "Ensenadian"
sswd.surveys$bgr[sswd.surveys$bgr < 29.5] <- "Magdelenan"

# model ------------------------------------------------------------------------
# The condition number of the Hessian measures the empirical identifiability of the model.
# High numbers, say larger than 104 or 106
# indicate that the model is ill defined. This would
# indicate that the model can be simplified,

library(ordinal)

# change abundance bins and latitude to factors and scale temperature values (already normally distributed)
sswd.surveys$Abundance <- as.factor(sswd.surveys$abundance)
sswd.surveys$f_lat2 <- as.factor(sswd.surveys$lat2)

# run models with different SST and anomaly metrics
tempMetric <- c("maxsst30", "maxsst60", "maxsst90", "maxsst180", "maxsst360"
                , "maxanom30", "maxanom60", "maxanom90", "maxanom180", "maxanom360")

daysToTemp <- c("maxsst30_days", "maxsst60_days", "maxsst90_days", "maxsst180_days"
                , "maxsst360_days", "maxanom30_days", "maxanom60_days", "maxanom90_days"
                , "maxanom180_days", "maxanom360_days")

for (i in 2:length(tempMetric)){
  sswd.surveys2 <- sswd.surveys
  sswd.surveys2$scaled_stemp2 <- scale(sswd.surveys2[,tempMetric[i]])
  sswd.surveys2$days <- scale(sswd.surveys2[,daysToTemp[i]])
  sswd_clmm_model <- clmm(Abundance ~ scaled_stemp2 + days + Year + (1|f_lat2) + (1|Month), data=sswd.surveys2, link = "probit")
  modName <- paste0("sswd_clmm_", tempMetric[i], ".rds")
  saveRDS(sswd_clmm_model, file = modName) # save model
  cat("finished running", tempMetric[i], "/")
}

# get model info for all models
SSWDaicDF <- c()

for (j in 1:length(tempMetric)){
  modName <- paste0("C:/Users/Jamie/Box Sync/Seastar/sswd_clmm_", tempMetric[j], ".rds")
  tempMod <- readRDS(modName)
  stat <- as.data.frame(summary(tempMod)$info)
  call <- as.data.frame(as.character(tempMod$call)[2])
  newRow <- cbind(stat, call, tempMetric[j])
  SSWDaicDF <- rbind(SSWDaicDF, newRow)
  assign(tempMetric[j], modName)
}

# Compare model with lowest AIC (maxanom60) without days as factor: 
sswd.surveys2 <- sswd.surveys
sswd.surveys2$scaled_stemp2 <- scale(sswd.surveys2$maxanom60)
sswd_clmm_maxanom60_nodays <- clmm(Abundance ~ scaled_stemp2 + Year + (1|f_lat2) + (1|Month), data=sswd.surveys2, link = "probit")
saveRDS(sswd_clmm_maxanom60_nodays, "sswd_clmm_maxanom60_nodays.rds")

# add model data to SSWDaicDF 
tempMod <- sswd_clmm_maxanom60_nodays
tempMetric <- "maxanom60_nodays"
stat <- as.data.frame(summary(tempMod)$info)
call <- as.data.frame(as.character(tempMod$call)[2])
newRow <- cbind(stat, call, tempMetric[j] == "maxanom60_nodays")
SSWDaicDF <- rbind(SSWDaicDF, newRow)

# save model output
colnames(SSWDaicDF)[length(SSWDaicDF)-1] <- "model"
colnames(SSWDaicDF)[length(SSWDaicDF)] <- "scaled_stemp2"
write.csv(SSWDaicDF, "clmm_model_output.csv", row.names = F)

# Compare maxanom60_nodays across regions:
metric <- "maxanom60"
sswd.surveys2 <- sswd.surveys
sswd.surveys2$scaled_stemp2 <- scale(sswd.surveys2[,metric])

regions <- unique(sswd.surveys2$bgr)[1:5]

for (i in 1:length(regions)){
  sswdRegDat <- subset(sswd.surveys2, bgr == regions[i])
  sswd_clmm_model <- clmm(Abundance ~ scaled_stemp2 + Year + (1|f_lat2) + (1|Month), data=sswdRegDat, link = "probit")
  modName <- paste0("sswd_clmm_maxanom60_", regions[i], ".rds")
  saveRDS(sswd_clmm_model, file = modName) # save model
  cat("finished running", regions[i])
}

for (i in 1:length(regions)){
  modName <- paste0("sswd_clmm_maxanom60_", regions[i], ".rds")
  tempMod <- readRDS(modName)
  assign(modName, tempMod)
}

# by state
# states <- unique(sswd.surveys2$state)[1:4]
# 
# for (i in 1:length(states)){
#   sswdRegDat <- subset(sswd.surveys2, state == states[i])
#   sswd_clmm_model <- clmm(Abundance ~ scaled_stemp2 + Year + (1|f_lat2) + (1|Month), data=sswdRegDat, link = "probit")
#   modName <- paste0("sswd_clmm_maxsst360_", states[i], ".rds")
#   saveRDS(sswd_clmm_model, file = modName) # save model
#   cat("finished running", states[i])
# }
# 
# for (i in 1:length(states)){
#   modName <- paste0("sswd_clmm_maxsst360_", states[i], ".rds")
#   tempMod <- readRDS(modName)
#   assign(modName, tempMod)
# }

# plots ------------------------------------------------------------------------
# plot region coefficients
library(ggplot2)

df <- data.frame(summary(sswd_clmm_maxanom60_Mendocinian.rds)$coefficients[6:16,1:2])
# df <- data.frame(summary(sswd_clmm_maxanom60_Montereyan.rds)$coefficients[4:11,1:2])
# df <- data.frame(summary(`sswd_clmm_maxanom60_S. Californian.rds`)$coefficients[5:15,1:2])
colnames(df) <- c("Coef", "SE")
df$Year <- c(2007:2017)
# df$Year <- c(2007:2009,2011,2014:2017) # for montereyan
df$Year <- as.factor(df$Year)
qplot(data=df,Year, Coef)+geom_errorbar(aes(x=Year, ymin=Coef-SE, ymax=Coef+SE), width=0.25)

# plot abundance bin x temperature (while accounting for other factors)
# https://stats.stackexchange.com/questions/89474/interpretation-of-ordinal-logistic-regression
sswd_clmm_maxanom60_nodays <- readRDS("sswd_clmm_maxanom60_nodays.rds")
fm1 <- sswd_clmm_maxanom60_nodays
sswd.surveys2 <- sswd.surveys
sswd.surveys2$scaled_stemp2 <- scale(sswd.surveys2$maxanom60)

coefSTemp <- unname(coef(fm1)["scaled_stemp2"]) # coefficient for temperature
stemp <- seq(from=min(sswd.surveys2$scaled_stemp2, na.rm=T), to=max(sswd.surveys2$scaled_stemp2, na.rm=T), by=.01)
xbeta <- stemp*coefSTemp 

logistic_cdf <- function(x) {
  return( 1/(1+exp(-x) ) )
}

A01 <- unname(head(coef(fm1), 1)[1]) 
A12 <- unname(head(coef(fm1), 2)[2])
A23 <- unname(head(coef(fm1), 3)[3])
A34 <- unname(head(coef(fm1), 4)[4])

Abundance0 <- logistic_cdf( A01 - xbeta )
Abundance1 <- logistic_cdf( A12 - xbeta ) - logistic_cdf( A01 - xbeta )
Abundance2 <- logistic_cdf( A23 - xbeta ) - logistic_cdf( A12 - xbeta )
Abundance3 <- logistic_cdf( A34 - xbeta ) - logistic_cdf( A23 - xbeta )
Abundance4 <- 1 - logistic_cdf( A34 - xbeta )

tempLab <- expression(paste("Temperature anomaly (",degree,"C)"))
sstSeq <- seq(-3,3,1)
stempSeq <- seq(min(stemp),max(stemp),1)

tiff("plots/model_results/maxanom60_abundance_bins.tiff", res=150,  width=500, height=1400)
par(mfrow=c(5,1))

plot(stemp, Abundance0, type='l', ylab='Probability', main=c("Abundance bin 0"), xlab=tempLab, cex.lab=1.5, cex.axis=1.4, cex.main=1.6, xaxt = "n", lwd=2)
axis(1, at=stempSeq, labels=sstSeq, cex.axis=1.4)

plot(stemp, Abundance1, col='cadetblue', type='l', ylab='Probability', main=c("Abundance bin 1"), xlab=tempLab, cex.lab=1.5, cex.axis=1.4, cex.main=1.6, xaxt = "n", lwd=2)
axis(1, at=stempSeq, labels=sstSeq, cex.axis=1.4)

plot(stemp, Abundance2, col='darkgoldenrod1', type='l', ylab='Probability', main=c("Abundance bin 2"), xlab=tempLab, cex.lab=1.5, cex.axis=1.4, cex.main=1.6, xaxt = "n", lwd=2)
axis(1, at=stempSeq, labels=sstSeq, cex.axis=1.4)

plot(stemp, Abundance3, col='darkmagenta', type='l', ylab='Probability', main=c("Abundance bin 3"), xlab=tempLab, cex.lab=1.5, cex.axis=1.4, cex.main=1.6, xaxt = "n", lwd=2)
axis(1, at=stempSeq, labels=sstSeq, cex.axis=1.4)

plot(stemp, Abundance4, col='deeppink', type='l', ylab='Probability', main=c("Abundance bin 4"), xlab=tempLab, cex.lab=1.5, cex.axis=1.4, cex.main=1.6, xaxt = "n", lwd=2)
axis(1, at=stempSeq, labels=sstSeq, cex.axis=1.4) 

dev.off()

# calculate odds of being in abundance bin 0 compared with all other bins with 1 degree increase in temp
exp(-coefSTemp) # odds of being in lowest category

# Plot random effects
# illustrates month effects via conditional modes with 95% confidence intervals based on the conditional variance
# fm2 <- fm1
# monthRange <- unname(unlist(ranef(fm2)["Month"])) # month intercepts
# ci <- fm2$ranef[monthRange] + qnorm(0.975) * sqrt(fm2$condVar[monthRange]) %o% c(-1, 1)
# plot(fm2$ranef[monthRange], axes=FALSE, ylim=range(ci),xlab="Month", ylab="Month effect")
# axis(1, at=1:length(monthRange))
# axis(2)
# for(i in 1:length(monthRange)) segments(i, ci[i,1], i, ci[i, 2])
# abline(h = 0, lty=2)
